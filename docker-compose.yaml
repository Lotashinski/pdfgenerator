version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    networks:
      - internal
    depends_on:
      - app
    volumes:
      - ./app:/var/www/html:ro
      - ./log/nginx:/var/log/nginx:rw
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  app:
    build:
      context: app
      dockerfile: Dockerfile
    networks:
      - internal
    depends_on:
      - database
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - APP_SECRET=${APP_SECRET:?error}
      - DATABASE_URL=mysql://${DATABASE_USER:-app}:${DATABASE_PASSWORD:?error}@database:3306/${DATABASE_DB:-app}?serverVersion=8.0.35&charset=utf8mb4
    volumes:
      - ./app:/var/www/html:rw
      - ./log/app:/var/www/html/var/log:rw
      - storage_app:/var/www/html/var/storage:rw


  database:
    image: mysql:8.0.35-debian
    networks:
      - internal
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?error}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:?error}
      MYSQL_DATABASE: ${DATABASE_DATABASE:-app}
      MYSQL_USER: ${DATABASE_USER:-app}
    volumes:
      - storage_database:/var/lib/mysql:rw
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

networks:
  internal:
    driver: bridge

    # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
    # - ./docker/db/data:/var/lib/postgresql/data:rw
##< doctrine/doctrine-bundle ###

volumes:
  storage_app:
  storage_database: